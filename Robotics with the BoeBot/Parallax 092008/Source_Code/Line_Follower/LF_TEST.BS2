' -----[ Title ]----------------------------------------------------------------
'
' File...... LF_TEST.BS2
' Purpose... Line Follower Test and Calibrate
' Author.... Parallax
' E-mail.... stamptech@parallaxinc.com
' { $STAMP BS2 }
' -----[ Program Description ]--------------------------------------------------
'
' This program is used to test and calibrate the BOE-Bot Line Follower module.
' -----[ Revision History ]-----------------------------------------------------
'
' 01 DEC 2001 - Version 1.0
' -----[ I/O Definitions ]------------------------------------------------------
'
' -----[ Constants ]------------------------------------------------------------
'
LEDon CON 0 ' LF LEDs are active low
LEDoff CON 1
WLine CON 0 ' white line on black field
BLine CON 1 ' black line on white field
LFmode CON BLine ' set pgm for black line
MoveTo CON 2 ' move to position character
' -----[ Variables ]------------------------------------------------------------
'
ledPos VAR Nib ' LED position in lfBits
lfBits VAR Byte ' line follower input bits
' -----[ EEPROM Data ]----------------------------------------------------------
'
' -----[ Initialization ]-------------------------------------------------------
'
Initialize:
OutL = %01111100 ' all LF LEDs off
DirL = %01111100 ' make pins outputs
Draw_Output_Screen:
PAUSE 200
DEBUG "Line Follower Test", CR
DEBUG CR
DEBUG " ------- ", CR
DEBUG " | | | | ", CR
DEBUG " +-| |-+ ", CR
DEBUG " | | | | ", CR
DEBUG " | | ", CR
DEBUG " | | ", CR
DEBUG " -- O -- ", CR
' -----[ Main Code ]------------------------------------------------------------
'
Main:
GOSUB Read_Line_Follower ' read the Line Follower
DEBUG MoveTo, 4, 3, BIN5 lfBits ' display LF reading
GOTO Main
END
' -----[ Subroutines ]----------------------------------------------------------
'
Read_Line_Follower:
lfBits = 0 ' clear last reading
FOR ledPos = 2 TO 6
OutL.LowBit(ledPos) = LEDon ' turn the LED on
PAUSE 1 ' allow sensor to read
lfBits.LowBit(ledPos) = In9 ^ LFmode ' record the sensor reading
OutL = OutL | %01111100 ' turn LEDs off
NEXT
lfBits = lfBits >> 2 ' shift bits to zero index
RETURN