' Program: DTMF_RCV.BS2 (Receives/display DTMF using 8880 with BS2)
' This program demonstrates how to use the 8880 as a DTMF decoder. As 
' each new DTMF digit is received, it is displayed on an LCD Serial 
' Backpack screen. If no tones are received within a period of time 
' set by sp_time, the program prints a space (or other selected character)
' to the LCD to record the delay. When the display reaches the righthand
' edge of the screen, it clears the LCD and starts over at the left edge. 

RS	con 	4		' Register-select pin (0=data). 
RW	con 	5		' Read/Write pin (0=write). 
CS	con	6		' Chip-select pin (0=active). 

dtmf 	var	byte		' Received DTMF digit. 
dt_Flag	var	bit		' DTMF-received flag. 
dt_det	var	INL.bit2	' DTMF detected status bit. 
home_Flag var	bit		' Flag: 0 = cursor at left edge of LCD.
polls 	var	word		' Number of unsuccessful polls of DTMF. 
LCDw 	con	16		' Width of LCD screen. 
LCDcol 	var	byte		' Current column of LCD screen for wrap. 
LCDcls 	con	1		' LCD clear-screen command. 
I 	con	254		' LCD instruction toggle. 
sp_time	con	1500		' Print space this # of polls w/o DTMF. 
n24n	con	$418D		' Serout constant: 2400 baud inverted. 

' This code initializes the 8880 for receiving by writing to its
' internal control registers CRA and CRB. The write occurs when 
' CS (pin 6) is taken low, then returned high. 

OUTL = %01111111	' Pin 7 (LCD) low, pins 0 through 6 high. 
DIRL = %11111111	' Set up to write to 8880 (all outputs). 
OUTL = %00011000	' Set up  register A, next write to register B. 
high CS
OUTL = %00010000	' Clear register B; ready to send DTMF. 
high CS
DIRL = %11110000	' Now set the 4-bit bus to input. 
high RW			' And set RW to "read."
serout 7,n24n,[I,LCDcls,I]	' Clear the LCD screen. 


' In the loop below, the program checks the 8880's status register
' to determine whether a DTMF tone has been received (indicated by 
' a '1' in bit 2). If no tone, the program loops back and checks 
' again. If a tone is present, the program switches from status to 
' data (RS low) and gets the value (0-15) of the tone. This 
' automatically resets the 8880's status flag. 
again: 
  high RS			' Read status register. 
  low CS			' Activate the 8880. 
  dt_flag = dt_det		' Store DTMF-detected bit into flag. 
  high CS			' End the read. 
if dt_Flag = 1 then skip1	' If tone detected, continue. 
polls = polls+1			' Another poll without DTMF tone. 
if polls < sp_time then again	' If not time to print a space, poll. 
if LCDcol = LCDw then skip2	' Don't erase the screen to print spaces. 
dtmf = 16			' Tell display routine to print a space. 
gosub Display			' Print space to LCD. 
skip2:
polls = 0			' Clear the counter. 
goto again			' Poll some more. 
skip1:				' Tone detected: 
polls = 0			' Clear the poll counter. 
low RS				' Get the DTMF data. 
low CS				' Activate 8880. 
dtmf = INL & %00001111		' Strip off upper 4 bits using AND. 
high CS				' Deactivate 8880. 
gosub display			' Display the data. 
goto again			' Do it all again. 

Display: 
if LCDcol < LCDw then skip3	' If not at end of LCD, don't clear screen.
serout 7,N24N,[I,LCDcls,I]	' Clear the LCD screen. 
LCDcol = 0			' And reset the column counter. 
skip3: 				' Look up the symbol for the digit. 
if LCDcol=0 AND dtmf=16 then ret	' No spaces at first column. 
lookup dtmf,["D1234567890*#ABC-"] ,dtmf
serout 7,N24N,[dtmf]		' Write it to the Backpack display. 
LCDcol = LCDcol + 1		' Increment the column counter. 
ret:
return
