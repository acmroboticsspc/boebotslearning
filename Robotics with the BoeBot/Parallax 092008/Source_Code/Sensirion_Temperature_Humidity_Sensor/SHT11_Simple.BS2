' ==============================================================================
'
'   File...... SHT11.BS2
'   Purpose... Interface to Sensirion SHT11 temperature/humidity sensor
'   E-mail.... stamptech@parallax.com
'   Date...... 12/30/02
'
'   {$STAMP BS2}
'
' ==============================================================================


' ------------------------------------------------------------------------------
' Program Description
' ------------------------------------------------------------------------------
'
' This program demonstrates the interface to the Sht1X and displays the raw data
' ------------------------------------------------------------------------------
' I/O Definitions
' ------------------------------------------------------------------------------

ShtData         CON     1                       ' bi-directional data
Clock           CON     0


' ------------------------------------------------------------------------------
' Constants
' ------------------------------------------------------------------------------

ShtTemp         CON     %00011                  ' read temperature
ShtHumi         CON     %00101                  ' read humidity
ShtStatW        CON     %00110                  ' status register write
ShtStatR        CON     %00111                  ' status register read
ShtReset        CON     %11110                  ' soft reset (wait 11 ms after)

Ack             CON     0
NoAck           CON     1

No              CON     0
Yes             CON     1

MoveTo          CON     2                       ' for DEBUG control
ClrRt           CON     11                      ' clear DEBUG line to right

DegSym          CON     186                     ' degrees symbol for DEBUG


' ------------------------------------------------------------------------------
' Variables
' ------------------------------------------------------------------------------

ioByte          VAR     Byte                    ' data from/to SHT1x
ackBit          VAR     Bit                     ' ack/nak from/to SHT1x
toDelay         VAR     Byte                    ' timeout delay timer
timeOut         VAR     Bit                     ' timeout status

soT             VAR     Word                    ' temp counts from SHT1x
soRH            VAR     Word                    ' humidity counts from SHT1x
rhLin           VAR     Word                    ' humidity; linearized
rhTrue          VAR     Word                    ' humidity; temp compensated
status          VAR     Byte                    ' SHT1x status byte


' ------------------------------------------------------------------------------
' EEPROM Data
' ------------------------------------------------------------------------------


' ------------------------------------------------------------------------------
' Initialization
' ------------------------------------------------------------------------------

Initialize:
  GOSUB SHT_Connection_Reset                    ' reset device connection

  PAUSE 250                                     ' let DEBUG window open


' ------------------------------------------------------------------------------
' Program Code
' ------------------------------------------------------------------------------

Sensor_Demo:
  GOSUB SHT_Measure_Temp


Main:
  DEBUG CLS
  DEBUG "SHT1x Demo", CR
  DEBUG "----------", CR

Main2:
  GOSUB SHT_Measure_Temp
  DEBUG MoveTo, 0, 3
  DEBUG "Raw Data Temp: "
  DEBUG DEC soT, ClrRt, CR


  GOSUB SHT_Measure_Humidity
 ' DEBUG MoveTo, 0, 7
  DEBUG "Raw Data Humidity: "
  DEBUG DEC soRH, ClrRt, CR


  PAUSE 1000                                    ' minimum delay between readings
  GOTO Main2




' ------------------------------------------------------------------------------
' Subroutines
' ------------------------------------------------------------------------------

' connection reset: 9 clock cyles with ShtData high, then start sequence
'
SHT_Connection_Reset:
  SHIFTOUT ShtData, Clock, LSBFirst, [$FFF\9]

'
SHT_Start:
  INPUT ShtData                                 ' let pull-up take line high
  LOW Clock
  HIGH Clock
  LOW ShtData
  LOW Clock
  HIGH Clock
  INPUT ShtData
  LOW Clock
  RETURN


SHT_Measure_Temp:
  GOSUB SHT_Start                               ' alert device
  ioByte = ShtTemp                              ' temperature command
  GOSUB SHT_Write_Byte                          ' send command
  GOSUB SHT_Wait                                ' wait until measurement done
  ackBit = Ack                                  ' another read follows
  GOSUB SHT_Read_Byte                           ' get MSB
  soT.HighByte = ioByte
  ackBit = NoAck                                ' last read
  GOSUB SHT_Read_Byte                           ' get LSB
  soT.LowByte = ioByte

  ' Note: Conversion factors are multiplied by 10 to return the
  '       temperature values in tenths of degrees
  RETURN


' measure humidity
'
SHT_Measure_Humidity:
  GOSUB SHT_Start                               ' alert device
  ioByte = ShtHumi                              ' humidity command
  GOSUB SHT_Write_Byte                          ' send command
  GOSUB SHT_Wait                                ' wait until measurement done
  ackBit = Ack                                  ' another read follows
  GOSUB SHT_Read_Byte                           ' get MSB
  soRH.HighByte = ioByte
  ackBit = NoAck                                ' last read
  GOSUB SHT_Read_Byte                           ' get LSB
  soRH.LowByte = ioByte

  RETURN



SHT_Write_Status:
  GOSUB SHT_Start                               ' alert device
  ioByte = ShtStatW                             ' write to status reg command
  GOSUB SHT_Write_Byte                          ' send command  
  ioByte = status
  GOSUB SHT_Write_Byte
  RETURN



SHT_Read_Status:
  GOSUB SHT_Start                               ' alert device
  ioByte = ShtStatW                             ' write to status reg command
  GOSUB SHT_Read_Byte                           ' send command  
  ackBit = NoAck                                ' only one byte to read
  GOSUB SHT_Read_Byte
  RETURN



SHT_Write_Byte:
  SHIFTOUT ShtData, Clock, MSBFirst, [ioByte]   ' send byte
  SHIFTIN  ShtData, Clock, LSBPre, [ackBit\1]   ' get ack bit
  RETURN



SHT_Read_Byte:
  SHIFTIN  ShtData, Clock, MSBPre, [ioByte]     ' get byte
  SHIFTOUT ShtData, Clock, LSBFirst, [ackBit\1] ' send ack bit
  INPUT ShtData                                 ' release data line
  RETURN


SHT_Wait:
  INPUT ShtData                                 ' data line is input
  FOR toDelay = 1 TO 250                        ' give ~1/4 second to finish
    timeOut = Ins.LowBit(ShtData)               ' scan data line
    IF (timeOut = No) THEN SHT_Wait_Done        ' if low, we're done
    PAUSE 1
  NEXT

SHT_Wait_Done:
  RETURN


SHT_Soft_Reset:
  GOSUB SHT_Connection_Reset                    ' reset the connection
  ioByte = ShtReset                             ' reset command
  ackBit = NoAck                                ' only one byte to send
  GOSUB SHT_Write_Byte                          ' send it
  PAUSE 11                                      ' wait at least 11 ms
  RETURN