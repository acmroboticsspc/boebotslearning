' =========================================================================
'
'   File....... StampPLC_Password.BS2
'   Purpose.... Typical PLC application whereby this unit listens for a
'               password on the serial port before allowing commands to be
'               parsed.
'   Author..... John Barrowman, Parallax
'   E-mail..... support@parallax.com
'   Started.... 25 JUN 2003
'   Updated.... 25 JUN 2003
'
'   {$STAMP BS2}
'   {$PBASIC 2.5}
'
' =========================================================================


' -----[ Program Description ]---------------------------------------------
'   This program demonstrates how to periodically "listen" for a password
'   message on the serial port while performing another task. Once the
'   correct password is given, the password may be altered or cleared.
'   The password is stored in eeprom so it is non-volatile.

' -----[ Revision History ]------------------------------------------------


' -----[ I/O Definitions ]-------------------------------------------------


' -----[ Constants ]-------------------------------------------------------

T1200           CON     813
T2400           CON     396
T9600           CON     84
T19200          CON     32

Baud            CON     T9600


' -----[ Variables ]-------------------------------------------------------

keyIn           VAR     Byte                    ' terminal input
serString       VAR     Byte(4)


' -----[ EEPROM Data ]-----------------------------------------------------


' -----[ Initialization ]--------------------------------------------------

Startup:
  GOSUB ReadPassword                            ' Read password
  IF keyIn = $FF THEN GOSUB SetPassword         ' If not set, set it
                                                ' else, start main code

' -----[ Program Code ]----------------------------------------------------

Main:
  SERIN 16, Baud, 500, RunProgram, [WAITSTR serString\4]
  DEBUG CR, "Password accepted!"
  DO                                            ' Once password received
    DEBUG CR, "C:> "
    SERIN 16, Baud, [keyIn]                     ' get a command
    SELECT keyIn                                ' process command
      CASE "X"
        GOTO ResumeProgram
      CASE "N"
        GOSUB SetPassword
      CASE "C"
        GOSUB ClearPassword
      CASE ELSE
        DEBUG " : Invalid command",BELL
     ENDSELECT
  LOOP
ResumeProgram:
  DEBUG CR                                      ' otherwise, run the
RunProgram:                                     ' user's program
  DEBUG "*"                                     ' user program goes here
  GOTO Main

' -----[ Subroutines ]-----------------------------------------------------

ReadPassword:                                   ' Read password from eeprom
  FOR keyIn = 0 TO 3
    READ keyIn, serString(keyIn)
  NEXT
  keyIn = serString(0)
  RETURN

SetPassword:                                    ' User interface to enter
  DEBUG CR, "Enter a 4-character password", CR  ' password
  SERIN 16, Baud, [STR serString\4]
  DEBUG CR, "Confirm password: "
  SERIN 16, Baud, [WAITSTR serString\4]
  FOR keyIn = 0 TO 3                            ' Write password to eeprom
    WRITE keyIn,serString(keyIn)
  NEXT
  DEBUG CR, "Password set", CR, "Working!", CR
  keyIn = "N"
  RETURN

ClearPassword:                                  ' Clear password in RAM
  FOR keyIn = 0 TO 3                            ' to $FF's and in eeprom
    WRITE keyIn, $FF                            ' to "0"'s
    serString(keyIn) = $30
  NEXT
  DEBUG CR, "Password cleared", CR
  keyIn = "C"
  RETURN