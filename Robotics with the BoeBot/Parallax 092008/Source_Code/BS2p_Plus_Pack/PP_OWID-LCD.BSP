' -----[ Title ]----------------------------------------------------------------
'
' BS2p Plus Pack
'
' File...... PP_OWID-LCD.BSP
' Purpose... Reads ROM data from 1-Wire device
' Author.... Parallax
' E-mail.... stamptech@parallaxinc.com
' Started...
' Updated... 26 SEP 2001

' {$STAMP BS2p, PP_OWNAMES.BSP}


' -----[ Program Description ]--------------------------------------------------
'
' Reads 1-Wire device ROM pattern.  Data is displayed on a 2x16 LCD.
'
' To run this program on the BS2p Demo Board, connect the LCD and install
' Jumper X6. Adjust contrast pot for best display.
'
' Refer to the Hitachi HD44780 documentation for details on LCD control.
'
' If using the iButton socket on the BS2p demo board, install Jumper X1-iB1.
'
' If using a "Blue Dot Receptor" (RJ-11 connection) with the BS2p Demo Board,
' install Jumper X1-iB2
'
' Do not connect more than one device.


' -----[ I/O Definitions ]------------------------------------------------------
'
LCDpin          CON     0                       ' connect LCD to OutL
OWpin           CON     15                      ' 1-wire device pin


' -----[ Constants ]------------------------------------------------------------
'
NoCmd           CON     $00                     ' No command in LCDOUT
ClrLCD          CON     $01                     ' clear the LCD
CrsrHm          CON     $02                     ' move cursor to home position
CrsrLf          CON     $10                     ' move cursor left
CrsrRt          CON     $14                     ' move cursor right
DispLf          CON     $18                     ' shift displayed chars left
DispRt          CON     $1C                     ' shift displayed chars right
DDRam           CON     $80                     ' Display Data RAM control
CGRam           CON     $40                     ' Custom character RAM
Line1           CON     $80                     ' DDRAM address of line 1
Line2           CON     $C0                     ' DDRAM address of line 2

' 1-Wire Support
'
OW_FERst        CON     %0001                   ' Front-End Reset
OW_BERst        CON     %0010                   ' Back-End Reset
OW_BitMode      CON     %0100
OW_HighSpd      CON     %1000

ReadROM         CON     $33                     ' read ID, serial num, CRC
SearchROM       CON     $F0                     ' search

NoDevice        CON     %11                     ' no device present
NamesPgm        CON     1                       ' names are stored in slot 1


' -----[ Variables ]------------------------------------------------------------
'
idx             VAR     Byte                    ' loop counter
romData         VAR     Byte(8)                 ' ROM data from device
devType         VAR     romData
devCheck        VAR     Nib                     ' device check return ocde
addr            VAR     Word                    ' address of string pointer
strPtr          VAR     Word                    ' string pointer (device address)
char            VAR     Byte                    ' character for LCD


' -----[ Initialization ]-------------------------------------------------------
'
Initialize:
  PAUSE 500                                     ' let the LCD settle
  LCDCMD LCDpin,%00110000 : PAUSE 5             ' 8-bit mode
  LCDCMD LCDpin,%00110000 : PAUSE 0
  LCDCMD LCDpin,%00110000 : PAUSE 0
  LCDCMD LCDpin,%00100000 : PAUSE 0             ' 4-bit mode
  LCDCMD LCDpin,%00101000 : PAUSE 0             ' 2-line mode
  LCDCMD LCDpin,%00001100 : PAUSE 0             ' no crsr, no blink
  LCDCMD LCDpin,%00000110                       ' inc crsr, no disp shift


' -----[ Main Code ]------------------------------------------------------------
'
Main:
  LCDOUT LCDpin,ClrLCD,["1-Wire"]               ' splash screen
  LCDOUT LCDpin,(Line2 + 6),["Identifier"]
  PAUSE 2500

  GOSUB Device_Check                            ' look for device
  IF (devCheck <> NoDevice) THEN Get_ROM

No_Device_Found:
  LCDOUT LCDpin,ClrLCD,["No 1-Wire device."]
  END

Get_ROM:
  OWOUT OWpin,OW_FERst,[ReadROM]                ' send Read ROM command
  OWIN  OWpin,OW_BERst,[STR romData\8]          ' read serial number & CRC

  IF (romData(7) < $FF) THEN Show_Device
  LCDOUT LCDpin,ClrLCD,["Bad device?"]
  END

Show_Device:
  LCDCMD LCDpin,ClrLCD
  GOSUB Display_Device_Type

  ' serial number
  LCDCMD LCDpin,Line2
  FOR idx = 6 TO 1
    LCDOUT LCDpin,NoCmd,[HEX2 romData(idx)]
  NEXT

  ' checksum
  LCDOUT LCDpin,NoCmd,["  ",HEX2 romData(7)]

  END


' -----[ Subroutines ]----------------------------------------------------------
'

' This subroutine checks to see if any 1-Wire devices are present on the
' bus.  It does NOT search for ROM codes
'
Device_Check:
  devCheck = 0
  OWOUT OWpin,OW_FERst,[SearchROM]              ' reset and start search
  OWIN  OWpin,OW_BitMode,[devCheck.Bit1,devCheck.Bit0]
  RETURN


' This subroutine is used to display the part number of a 1-Wire device.
' The text data and pointers to it are stored in the EE of a different
' program slot.

Display_Device_Type:
  addr = devType * 2 + $600                     ' calulate string pointer addr
  STORE NamesPgm                                ' point to names EEPROM
  READ addr,strPtr.LowByte                      ' get the string location
  READ addr+1,strPtr.HighByte

Read_Char:
  READ strPtr,char                              ' read character from string
  IF (char = 0) THEN Dev_Type_Done              ' at end? (0 = Yes)
  LCDOUT LCDpin,NoCmd,[char]                    ' no, print the char
  strPtr = strPtr + 1                           ' point to next char
  GOTO Read_Char
Dev_Type_Done:
  STORE 0                                       ' point to main pgm slot
  RETURN